@page "/mahasiswa"
@using System.Net.Http
@using System.Net.Http.Json
@using System.Threading.Tasks
@inject HttpClient Http
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager

<PageTitle>Mahasiswa</PageTitle>

<h1>Mahasiswa SI UKDW</h1>

<p>Data Mahasiswa Universitas Kristen Duta Wacana.</p>

<div class="input-group col">
        <input type="text" class="form-control" @onclick="CariData" placeholder="Cari Mahasiswa" @bind="SearchString" />
        <a class="btn btn-primary" role="button" @onclick="CariData">Cari</a>
</div>


@if (mhs == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="Mahasiswa">
        <thead>
            <tr>
                <th>ID</th>
                <th>Nama</th>
                <th>NIM</th>
                <th>Alamat</th>
                <th>EMAIL</th>
                <th>FOTO</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var mh in mhs)
            {
                <tr>
                    <td>@mh.id</td>
                    <td>@mh.nama</td>
                    <td>@mh.nim</td>
                    <td>@mh.alamat</td>
                    <td>@mh.email</td>
                    <td>@mh.foto</td>
                </tr>
            }
        </tbody>
    </table>

    <a href="/add">
        <button type="button" class="btn btn-primary">Add Mahasiswa</button>
    </a>

    <div class="input-group col">
        <a href="/add"></a>
        <a class="btn btn-primary" role="button" @onclick="SubmitMahasiswa">Update Mahasiswa</a>
    </div>

    <a href="/add">
        <button type="button" class="btn btn-primary">Delete Mahasiswa</button>
    </a>

}

@code {
    public string Id{ get; set; }
    protected List<Mahasiswa> searchUserData = new();
    protected override async Task OnInitializedAsync(){
        mhs = await Http.GetFromJsonAsync<List<Mahasiswa>>(Id);
        mhs = await Http.GetFromJsonAsync<List<Mahasiswa>>("https://kpsi.fti.ukdw.ac.id/api/progmob/mhs/72200375");
        searchUserData = mhs;
    }
    private List<Mahasiswa> mh = new();
    private async void SubmitMahasiswa() {
        await Http.GetFromJsonAsync<List<Mahasiswa>>("https://kpsi.fti.ukdw.ac.id/api/progmob/mhs/72200375");
            searchUserData = mh;
            NavigationManager.NavigateTo("/update");
    }
    public async Task DeleteMahasiswa(int mahasiswaId) {
        var mahasiswa = await Http.GetFromJsonAsync<List<Mahasiswa>>("https://kpsi.fti.ukdw.ac.id/api/progmob/mhs/72200375");
            if (mahasiswa != null) {
                await Http.GetFromJsonAsync<List<Mahasiswa>>(Id);
                mahasiswa.RemoveAll(x => x.id == mahasiswaId);
            }
    }

    protected List<Mahasiswa> mhs = new();
    protected string SearchString { get; set; } = string.Empty;
    protected void CariData(){
        if (!string.IsNullOrEmpty(SearchString)){
            mhs = searchUserData
                .Where(x => x.nim.IndexOf(SearchString, StringComparison.OrdinalIgnoreCase) != -1)
                .ToList();
        }else{
            mhs = searchUserData;
    }
}


    public class Mahasiswa
    {
        public int id { get; set; }

        public string nama { get; set; }

        public string nim { get; set; }

        public string alamat {get;set;}

        public string email {get;set;}

        public string foto {get;set;}
    }
}